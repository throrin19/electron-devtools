@import './colors';

// usage: color("name_of_color", "type_of_color")
// to avoid to repeating map-get($colors, ...)

@function color($color, $type) {
    @if map-has-key($colors, $color) {
        $curr_color: map-get($colors, $color);
        @if map-has-key($curr_color, $type) {
            @return map-get($curr_color, $type);
        }
    }
    @warn "Unknown `#{$color}` in $colors.";
    @return null;
}

/*
 * Calculates the sRGB luma of a colour.
 *
 * Math nicked from a great Thoughtbot article by Reda Lemeden:
 * http://robots.thoughtbot.com/closer-look-color-lightness
 */
@function luma($c) {
    $-local-red: red(rgba($c, 1.0));
    $-local-green: green(rgba($c, 1.0));
    $-local-blue: blue(rgba($c, 1.0));

    @return (0.2126 * $-local-red  +
           0.7152 * $-local-green +
           0.0722 * $-local-blue) / 255;
}

@function pick-visible-color($bg, $c1, $c2) {
    $bg-luma: luma($bg);
    $c1-luma: luma($c1);
    $c2-luma: luma($c2);

    $c1-diff: abs($bg-luma - $c1-luma);
    $c2-diff: abs($bg-luma - $c2-luma);

    @if $c1-diff > $c2-diff {
        @return $c1;
    } @else {
        @return $c2;
    }
}
